#if (${PACKAGE_NAME} && ${PACKAGE_NAME} != "")package ${PACKAGE_NAME}
#end

import com.copperleaf.ballast.InputHandler
import com.copperleaf.ballast.InputHandlerScope
import kotlinx.coroutines.delay

#parse("File Header.java")
public class ${featureName}InputHandler : InputHandler<
    ${featureName}Contract.Inputs,
    ${featureName}Contract.Events,
    ${featureName}Contract.State> {
    override suspend fun InputHandlerScope<
        ${featureName}Contract.Inputs,
        ${featureName}Contract.Events,
        ${featureName}Contract.State>.handleInput(
        input: ${featureName}Contract.Inputs
    ) = when (input) {
        is ${featureName}Contract.Inputs.Initialize -> {
            updateState { it.copy(loading = true) }
            delay(1000)
            updateState { it.copy(loading = false) }
        }
        is ${featureName}Contract.Inputs.GoBack -> {
            postEvent(${featureName}Contract.Events.NavigateUp)
        }
    }
}
